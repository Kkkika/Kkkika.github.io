<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo搭建Butterfly主题记录</title>
      <link href="/2025/09/01/Hexo%E6%90%AD%E5%BB%BAButterfly%E4%B8%BB%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2025/09/01/Hexo%E6%90%AD%E5%BB%BAButterfly%E4%B8%BB%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><p>生成主题静态文件：</p><p>等价于hexo generate</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>启动本地服务：</p><p>等价于hexo server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在博客根目录下执行以下命令，创建一篇新文章：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;我的第一篇文章&quot;</span></span><br></pre></td></tr></table></figure><p>部署到GitHub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>清除缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h2 id="美化-文章"><a href="#美化-文章" class="headerlink" title="美化-文章"></a>美化-文章</h2><h2 id="美化-首页"><a href="#美化-首页" class="headerlink" title="美化-首页"></a>美化-首页</h2><p>butterfly博客评论</p><p>主题美化参考：</p><p><a href="https://butterfly.js.org/categories/Docs%E6%96%87%E6%AA%94/">分類: Docs文檔 | Butterfly</a></p><p><a href="https://blog.csdn.net/mjh1667002013/article/details/129290903">【Hexo】Hexo搭建Butterfly主题并快速美化_hexo butterfly-CSDN博客</a></p><p><a href="https://nickxu.me/2022/02/20/Hexo-Butterfly-%E5%BB%BA%E7%AB%99%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%94%EF%BC%89%E6%97%A5%E5%B8%B8%E5%86%99%E4%BD%9C/">Hexo + Butterfly 建站指南（五）日常写作 | NX の 博客</a></p><p><a href="https://korgs.blog.csdn.net/article/details/131094362?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-131094362-blog-135929884.235%5Ev43%5Epc_blog_bottom_relevance_base8&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-131094362-blog-135929884.235%5Ev43%5Epc_blog_bottom_relevance_base8&utm_relevant_index=6">基于Hexo和Butterfly创建个人技术博客，(7) 配置butterfly主题搭建博客网站主体UI框架_hexo butterfly-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/04/13/hello-world/"/>
      <url>/2025/04/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>已解决 md写文章hexo上传查看不了图片</title>
      <link href="/2025/04/11/%E5%B7%B2%E8%A7%A3%E5%86%B3-md%E5%86%99%E6%96%87%E7%AB%A0hexo%E4%B8%8A%E4%BC%A0%E6%9F%A5%E7%9C%8B%E4%B8%8D%E4%BA%86%E5%9B%BE%E7%89%87/"/>
      <url>/2025/04/11/%E5%B7%B2%E8%A7%A3%E5%86%B3-md%E5%86%99%E6%96%87%E7%AB%A0hexo%E4%B8%8A%E4%BC%A0%E6%9F%A5%E7%9C%8B%E4%B8%8D%E4%BA%86%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1 目标"></a>1 目标</h2><p>解决的痛点：markdown写文章可以直接粘本地图片，并上传到github时hexo的博客也能正常显示。避免开启post_asset_folder文件资源夹，这样只有有图片的博文会新建文件夹来存储博文的图片 。不用下载任何img插件，网上很多人的解决方法都说要安装如hexo-asset-img插件，完全不必。</p><p>关键词条：</p><p>如何在Hexo博客中插入本地图片</p><p>如何在Hexo博客中插入图片</p><p>Hexo博客中图片无法显示</p><h2 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2 解决方法"></a>2 解决方法</h2><p>解决的核心：在Typora粘图时设置图像粘到指定路径:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./../</span><br></pre></td></tr></table></figure><p>这样图片会直接存放在<strong>source</strong>文件夹下，如下面三张图：</p><p><img src="/./../%E5%B7%B2%E8%A7%A3%E5%86%B3-md%E5%86%99%E6%96%87%E7%AB%A0hexo%E4%B8%8A%E4%BC%A0%E6%9F%A5%E7%9C%8B%E4%B8%8D%E4%BA%86%E5%9B%BE%E7%89%87/image-20250413144513945.png"></p><p>我喜欢用如下路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./../$&#123;filename&#125;</span><br></pre></td></tr></table></figure><p>操作：Typora菜单栏的【文件】，打开【偏好设置】，点击【图像】</p><p><img src="/./../%E5%B7%B2%E8%A7%A3%E5%86%B3-md%E5%86%99%E6%96%87%E7%AB%A0hexo%E4%B8%8A%E4%BC%A0%E6%9F%A5%E7%9C%8B%E4%B8%8D%E4%BA%86%E5%9B%BE%E7%89%87/image-20250413144119948.png" alt="image-20250413144119948"></p><h2 id="3-尚未解决"><a href="#3-尚未解决" class="headerlink" title="3 尚未解决"></a>3 尚未解决</h2><p>图片不能调整大小，好难受，，，</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Github常用</title>
      <link href="/2025/04/11/Github%E5%B8%B8%E7%94%A8/"/>
      <url>/2025/04/11/Github%E5%B8%B8%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="GitHub中clone指定Commits"><a href="#GitHub中clone指定Commits" class="headerlink" title="GitHub中clone指定Commits"></a>GitHub中clone指定Commits</h2><p>（GitHub中下载指定版本）</p><p>git clone <a href="https://github.com/Kkkika/Kkkika.github.io.git">https://github.com/Kkkika/Kkkika.github.io.git</a></p><h3 id="📌-方法：克隆后创建新分支（推荐）"><a href="#📌-方法：克隆后创建新分支（推荐）" class="headerlink" title="📌 方法：克隆后创建新分支（推荐）"></a>📌 方法：克隆后创建新分支（推荐）</h3><p>如果你想在特定提交的基础上进行一些修改或实验，最好创建一个新分支。</p><ol><li><p><strong>克隆仓库并进入目录</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Kkkika/Kkkika.github.io.git</span><br><span class="line">cd Kkkika.github.io</span><br></pre></td></tr></table></figure></li><li><p><strong>基于特定提交创建并切换到一个新分支</strong>：这可以避免“分离头指针”状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch my-new-branch cc09550ac7db24e987f6f2130da2ee1564191b12</span><br><span class="line">git checkout my-new-branch</span><br></pre></td></tr></table></figure><p>或者更简洁地用一条命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b my-new-branch cc09550ac7db24e987f6f2130da2ee1564191b12</span><br></pre></td></tr></table></figure><p>这样，你就在一个名为 <code>my-new-branch</code> 的分支上工作，这个分支的起点就是你指定的那个提交。</p></li></ol><h3 id="📌-浅克隆（如果只想快速获取）"><a href="#📌-浅克隆（如果只想快速获取）" class="headerlink" title="📌 浅克隆（如果只想快速获取）"></a>📌 浅克隆（如果只想快速获取）</h3><p>如果你只关心最新的一部分提交，或者仓库很大想加快克隆速度，可以考虑浅克隆。</p><ol><li><p><strong>浅克隆仓库</strong>（例如只克隆最近 10 个提交）：</p><p>bash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth 10 https://github.com/Kkkika/Kkkika.github.io.git</span><br><span class="line">cd Kkkika.github.io</span><br></pre></td></tr></table></figure><p><code>--depth 10</code> 参数表示只克隆最近10次提交的历史。你需要确保你想要的提交（<code>cc09550...</code>）在这最近的10次提交之内。</p></li><li><p><strong>然后切换到你想要的提交</strong>：</p><p>bash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout cc09550ac7db24e987f6f2130da2ee1564191b12</span><br></pre></td></tr></table></figure></li></ol><h3 id="⚠️-重要提示"><a href="#⚠️-重要提示" class="headerlink" title="⚠️ 重要提示"></a>⚠️ 重要提示</h3><ul><li><strong>关于 <code>-b</code> 参数</strong>：<code>-b</code> 在 <code>git clone</code> 中用于指定分支或标签，不能直接用于提交哈希5。</li><li><strong>“分离头指针”状态</strong>：直接 <code>git checkout &lt;commit-hash&gt;</code> 会进入此状态。在此状态下进行更改并提交后，如果不创建分支指向这些新提交，它们可能会被 Git 的垃圾回收机制清除10。如果计划基于该提交进行修改，请务必创建新分支。</li><li><strong>获取正确的提交哈希</strong>：确保你复制的提交哈希是正确的且存在于远程仓库中。你可以通过 GitHub 网站的提交历史页面来查看和确认提交哈希。</li></ul><h3 id="💎-如何选择方法？"><a href="#💎-如何选择方法？" class="headerlink" title="💎 如何选择方法？"></a>💎 如何选择方法？</h3><p>为了更清晰地选择，可以参考下面的流程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout</span><br></pre></td></tr></table></figure><pre><code class="highlight mermaid">graph TD    A[需求：克隆特定提交] --&gt; B&#123;是否需要完整历史？&#125;    B -- 是 --&gt; C[克隆整个仓库后切换]    B -- 否 --&gt; D[考虑浅克隆后切换]        C --&gt; E&#123;是否基于此提交修改？&#125;    E -- 是 --&gt; F[创建新分支]    E -- 否，仅查看 --&gt; G[直接 checkout 提交哈希&lt;br&gt;（分离头指针）]        D --&gt; H&#123;是否基于此提交修改？&#125;    H -- 是 --&gt; F    H -- 否，仅查看 --&gt; G</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pic</title>
      <link href="/2025/04/11/pic/"/>
      <url>/2025/04/11/pic/</url>
      
        <content type="html"><![CDATA[<p>文章路径：C:\Code\KikaBlog\blog\source_posts</p><p>（疑问：为什么source和_posts之间的斜杠显示的时候会被隐藏？）</p><h2 id="1-【typora可-博客不可】【-】"><a href="#1-【typora可-博客不可】【-】" class="headerlink" title="1 【typora可 博客不可】【.&#x2F;】"></a>1 【typora可 博客不可】【.&#x2F;】</h2><p>实际路径在C:\Code\KikaBlog\blog\source_posts</p><p><img src="/./test1.png" alt="image-test"></p><p>但是如果我复制图片到C:\Code\KikaBlog\blog\source的时候，博客上就可以正常显示，而图片路径还是.&#x2F;</p><p><img src="/./../pic/test1-2.png" alt="image-20250829145619612"></p><p>也就是说把图片放在C:\Code\KikaBlog\blog\source上用路径.&#x2F;和.&#x2F;..&#x2F;是等价的；还有就是_posts文件夹是进不去的，这个文件夹只能放.md</p><h2 id="2【都可！typora可-博客可】【-】"><a href="#2【都可！typora可-博客可】【-】" class="headerlink" title="2【都可！typora可 博客可】【.&#x2F;..&#x2F;】"></a>2【都可！typora可 博客可】【.&#x2F;..&#x2F;】</h2><p>实际路径在C:\Code\KikaBlog\blog\source</p><p><img src="/./../test2.png" alt="image-test"></p><p>缺点：图片文件挤在同一个文件夹，不方便管理</p><h2 id="3【typora可-博客不可】【-filename-】"><a href="#3【typora可-博客不可】【-filename-】" class="headerlink" title="3【typora可 博客不可】【.&#x2F;${filename}】"></a>3【typora可 博客不可】【.&#x2F;${filename}】</h2><p>实际路径在C:\Code\KikaBlog\blog\source_posts\pic</p><p><img src="/./pic/test3.png" alt="image-test"></p><p>为什么不行？这样管理分类最有秩序了，在_posts中搜索文章名，可以直接搜到文章存放图片的文件夹。啊啊啊啊</p><h2 id="4【都可！typora可-博客可】【-filename-】"><a href="#4【都可！typora可-博客可】【-filename-】" class="headerlink" title="4【都可！typora可 博客可】【.&#x2F;..&#x2F;${filename}】"></a>4【都可！typora可 博客可】【.&#x2F;..&#x2F;${filename}】</h2><p>实际路径在C:\Code\KikaBlog\blog\source\pic</p><p><img src="/./../pic/test4.png" alt="image-test"></p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>第2种和第4种在Typora写文章时可以看到图片，并且GitHub搭建的博客网站上也能正常显示图片。</p><p>第2种是把图片统一放在博客文件夹下的source里；</p><p>第4种则在source文件夹中创建一个与文章名同名的文件夹存放图片，个人更喜欢第4种存放方式。</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 Markdown 编写文档用什么软件</title>
      <link href="/2025/04/10/%E4%BD%BF%E7%94%A8%20Markdown%20%E7%BC%96%E5%86%99%E6%96%87%E6%A1%A3%E7%94%A8%E4%BB%80%E4%B9%88%E8%BD%AF%E4%BB%B6/"/>
      <url>/2025/04/10/%E4%BD%BF%E7%94%A8%20Markdown%20%E7%BC%96%E5%86%99%E6%96%87%E6%A1%A3%E7%94%A8%E4%BB%80%E4%B9%88%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<ol><li><p>Typora<br> 核心优势：所见即所得（WYSIWYG）界面，实时渲染 Markdown 语法，支持表格、代码块、数学公式（LaTeX）、任务列表等。<br> 导出能力：直接导出为 PDF、HTML、Word、ePub 等格式，适合生成报告或电子书。<br> 价格：买断制 89 元人民币，支持 Windows&#x2F;macOS&#x2F;Linux。<br> 适用场景：个人写作、技术文档、学术论文。</p></li><li><p>VS Code + 插件<br> 核心优势：代码编辑器的强大扩展性，通过插件支持 Markdown 语法高亮、实时预览、TOC 生成。<br> 插件：<br> Markdown All in One：快捷键和格式转换工具。<br> Markdown PDF：一键导出 PDF（需安装 LaTeX 环境）。<br> 适用场景：开发者、技术文档撰写者。<br> 缺点：不能通过剪切板粘图，需要手动上传图片。这是我特别常用的一个功能，所以需要一个更好的软件。</p></li><li><p>MarkText<br> 核心优势：开源免费，支持实时预览、多主题切换（如 Material Dark）、三种编辑模式（源码 &#x2F; 打字机 &#x2F; 专注）。<br> 特色功能：直接粘贴图片到文档，支持数学公式（KaTeX）和 Mermaid 图表。<br> 导出能力：导出 HTML 和 PDF，适合轻量级文档。<br> 适用场景：学生、自由职业者、开源项目贡献者。<br> 缺点：现在好像没人维护了，最新版本还是v0.17.1。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
